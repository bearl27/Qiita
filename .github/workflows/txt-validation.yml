name: Frontmatter Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  validate-frontmatter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install js-yaml

      - name: Check Frontmatter
        run: |
          node -e '
          const fs = require("fs");
          const yaml = require("js-yaml");
          const path = require("path");

          const checkFrontmatter = (filePath) => {
            try {
              const content = fs.readFileSync(filePath, "utf8");
              const frontmatterMatch = content.match(/^---\n([\s\S]*?)\n---/);
          
              if (!frontmatterMatch) return;
          
              const frontmatter = yaml.load(frontmatterMatch[1]);
          
              const errors = [];
          
              // タグがない、または空の配列の場合
              if (!frontmatter.tags || frontmatter.tags.length === 0) {
                errors.push("タグが設定されていません");
              }
          
              // privateがtrueなのにorganization_url_nameが設定されている場合
              if (frontmatter.private === true && frontmatter.organization_url_name !== null) {
                errors.push("非公開記事にorganization_url_nameが設定されています");
              }
          
              if (errors.length > 0) {
                console.error(`${filePath}で以下のエラーが見つかりました：`);
                errors.forEach(error => console.error(`- ${error}`));
                process.exit(1);
              }
            } catch (error) {
              console.error(`${filePath}の処理中にエラーが発生しました：`, error);
              process.exit(1);
            }
          };

          // 変更されたmdファイルのチェック
          const { execSync } = require("child_process");
          const diffFiles = execSync("git diff --name-only origin/main HEAD")
            .toString()
            .split("\n")
            .filter(file => file.endsWith(".md"));

          diffFiles.forEach(file => {
            if (fs.existsSync(file)) {
              checkFrontmatter(file);
            }
          });
          '